
//Austin Fulford 2260112

function displayWelcome (name) {
	console.log ("\nWelcome " + name + ", this program will attempt to calculate the length of time needed to pay off your credit card!\n");
}

function calculateMinimumPayment(balance, minPayRate) {
	var minPayAmt = (balance * minPayRate);
	return minPayAmt;
}

function getUserInput() {
	var readlineSync = require('readline-sync');
	
	var nameB = readlineSync.question("Enter your name: ");
	
	displayWelcome(nameB);
	
	var balanceB = readlineSync.question("Enter your current balance: ");
	var intRateB = readlineSync.question("Please enter your current interest rate as a numeral percentage (e.g. 18% would be 0.18): ");
	var minPayRateB = readlineSync.question("Please enter your current minimum payment rate as a numeral percentage (e.g. 2% would be 0.02): ");
	
	var userInput = {name:nameB, balance:balanceB, intRate:intRateB, minPayRate:minPayRateB};
	return userInput;
}

function processPaymentSchedule (balance, intRate, minPayRate) {
	var paySchedule = {year:1, balance:0, paymentID:0, intTotal:0};
	
	var balanceC = balance;
	
	var intRateC = (intRate / 12);
	
	var intPaid = 0;
	
	var minPayAmt = calculateMinimumPayment(balanceC, minPayRate);
	
	while (balanceC > 0) {
		
		paySchedule.paymentID = (paySchedule.paymentID + 1);
		
		if (paySchedule.paymentID % 12 == 0) {
			paySchedule.year = (paySchedule.year + 1);
		}
		
		intPaid = (balanceC * intRateC);
		
		if ((balanceC - (minPayAmt - intPaid)) < 0){
			paySchedule.balance = Math.max(0, (balanceC - (minPayAmt - intPaid)));
		}
		else{
			paySchedule.balance = (balanceC - (minPayAmt - intPaid));
		}
		
		paySchedule.intTotal = (paySchedule.intTotal + intPaid);
		
		displayPayment(paySchedule);
		
		balanceC = paySchedule.balance;
	}
	
	return paySchedule;
}

function displayPayment(payS) {
	var paymentSchedule = payS;
	
	console.log("Year   " + "Balance   " + "Payment ID   " + "Interest Paid   " );
	
	console.log(paymentSchedule.year + "      " + paymentSchedule.balance.toFixed(2) + "      " + paymentSchedule.paymentID + "            " + paymentSchedule.intTotal.toFixed(2) + "\n");	
}

console.log("Hello, beginning program.\n");

var name;
var balance;
var intRate;
var minPayRate;
var intTotal;
var payID;

let userInput = getUserInput();

processPaymentSchedule(userInput.balance, userInput.intRate, userInput.minPayRate);
